AWSTemplateFormatVersion: 2010-09-09
Description: Spdataservice - Amazon Aurora MySQL 5.7 DB Cluster

Parameters:
  Service:
    Type: String
    Default: spdataservice
  environment:
    Type: String
    Default: dev
  envId:
    AllowedValues: ["spds01", "spds02"]
    Type: String
    Default: spds01
  DBInstanceName:
    Type: String
    Default: rds
  MasterUsername:
    Type: String
    Description: The master username for the Aurora DB cluster
    Default: dbuser
  MasterUserPassword:
    Type: String
    NoEcho: true
    Description: The master user password for the Aurora DB cluster
  InstanceType:
    Type: String
    Description: The DB instance class for the Aurora DB cluster
    Default: db.t4g.medium
    AllowedValues:
      - "db.r5.12xlarge"
      - "db.r5.16xlarge"
      - "db.r5.24xlarge"
      - "db.r5.2xlarge"
      - "db.r5.4xlarge"
      - "db.r5.8xlarge"
      - "db.r5.large"
      - "db.r5.xlarge"
      - "db.r7g.12xlarge"
      - "db.r7g.16xlarge"
      - "db.r7g.2xlarge"
      - "db.r7g.4xlarge"
      - "db.r7g.8xlarge"
      - "db.r7g.large"
      - "db.r7g.xlarge"
      - "db.r6i.12xlarge"
      - "db.r6i.16xlarge"
      - "db.r6i.24xlarge"
      - "db.r6i.2xlarge"
      - "db.r6i.32xlarge"
      - "db.r6i.4xlarge"
      - "db.r6i.8xlarge"
      - "db.r6i.large"
      - "db.r6i.xlarge"
      - "db.serverless"
      - "db.t3.large"
      - "db.t3.medium"
      - "db.t4g.large"
      - "db.t4g.medium"
  PreferredBackupWindow:
    Description: "In UTC"
    Type: String
    Default: 22:00-23:00
  PreferredMaintenanceWindow:
    Description: "In UTC"
    Type: String
    Default: "sun:19:30-sun:20:00"
  BackupRetentionPeriod:
    Description: Days before backup deletion, 3 for dev and 15 for prod
    Type: Number
    Default: 3
  EnableMultiAz:
    Description: Decide whether the Aurora Cluster has a single instance or 2 instances.
    Type: String
    Default: true
    AllowedValues:
      - "true"
      - "false"
  DBSnapshotArn:
    Description: If you want to create an Aurora Cluster from your snapshot, please enter your Snapshot ARN. If you leave it empty, this template creates a brand new Aurora Cluster.
    Type: String

Conditions:
  isBrandNewDB: !Equals [ !Ref DBSnapshotArn, "" ]
  enableMultiAz: !Equals [ !Ref EnableMultiAz, "true" ]

Resources:

# ##################################################
# ## DBCluster
# ##################################################

  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: 5.7.mysql_aurora.2.11.4
      EngineVersion: 5.7.12
      SnapshotIdentifier: !If [isBrandNewDB, !Ref "AWS::NoValue", !Ref DBSnapshotArn ]
      DBClusterIdentifier: !Sub ${envId}-${environment}-cluster
      MasterUsername: !If [isBrandNewDB, !Ref MasterUsername, !Ref "AWS::NoValue" ]
      MasterUserPassword: !If [isBrandNewDB, !Ref MasterUserPassword, !Ref "AWS::NoValue" ]
      Port: 3306
      DBSubnetGroupName: !Ref DBSubnetGroup  # Specify your DB subnet group
      VpcSecurityGroupIds: 
        - !Ref DBSecurityGroup  # Specify your security group ID
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup

  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: RDS DB parameter group the Aurora Cluster's instance(s).
      Family: aurora-mysql5.7
      Parameters:
        max_connections: 1000

  DBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: RDS DB cluster parameter group
      Family: aurora-mysql5.7
      Parameters:
        character_set_client: utf8mb4
        character_set_connection: utf8mb4
        character_set_database: utf8mb4
        character_set_filesystem: utf8mb4
        character_set_results: utf8mb4
        character_set_server: utf8mb4
        collation_connection: utf8mb4_bin
        collation_server: utf8mb4_bin
        skip-character-set-client-handshake: 1
        time_zone: UTC

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS subnet group.
      SubnetIds:
        - Fn::ImportValue: !Sub ${envId}-${environment}-Private-Subnet-A
        - Fn::ImportValue: !Sub ${envId}-${environment}-Private-Subnet-C

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: { Fn::ImportValue: !Sub "${envId}-${environment}-VPC" }
      GroupName: !Sub ${envId}-${environment}-${DBInstanceName}-sg
      GroupDescription: 'For db'
      Tags:
        - Key: Name
          Value: !Sub ${envId}-${environment}-${DBInstanceName}-sg
      # Rule
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: { Fn::ImportValue: !Sub "${envId}-${environment}-VPC-CIDR" }


# ##################################################
# ## DBInstance 1
# ##################################################

  AuroraDBInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraDBCluster
      Engine: 5.7.mysql_aurora.2.11.4
      EngineVersion: 5.7.12
      DBInstanceClass: !Ref InstanceType
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBParameterGroupName: !Ref DBParameterGroup
      Tags:
        - Key: Name
          Value: !Sub ${envId}-${environment}-${DBInstanceName}-instance1
        - Key: Env
          Value: !Ref environment
        - Key: Service
          Value: !Sub ${envId}-${environment}
        - Key: Role
          Value: Datastore


# ##################################################
# ## DBInstance 2
# ##################################################

  AuroraDBInstance2:
    Type: AWS::RDS::DBInstance
    Condition: enableMultiAz
    Properties:
      DBClusterIdentifier: !Ref AuroraDBCluster
      Engine: 5.7.mysql_aurora.2.11.4
      EngineVersion: 5.7.12
      DBInstanceClass: !Ref InstanceType
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBParameterGroupName: !Ref DBParameterGroup
      Tags:
        - Key: Name
          Value: !Sub ${envId}-${environment}-${DBInstanceName}-instance2
        - Key: Env
          Value: !Ref environment
        - Key: Service
          Value: !Sub ${envId}-${environment}
        - Key: Role
          Value: Datastore

Outputs:
  AuroraDBCluster:
    Description: An Aurora(MySQL) Cluster
    Value: !Ref AuroraDBCluster
    Export:
      Name: !Sub ${envId}-${environment}-cluster

  DNSName:
    Description: The connection endpoint for the DB cluster.
    Value: !GetAtt AuroraDBCluster.Endpoint.Address
    Export:
      Name: !Sub ${envId}-${environment}-dnsname

  ReadDNSName:
    Description: The reader endpoint for the DB cluster.
    Value: !GetAtt AuroraDBCluster.ReadEndpoint.Address
    Export:
      Name: !Sub ${envId}-${environment}-read-dnsname

  SecurityGroupId:
    Description: The security group used to manage access to RDS Aurora Serverless.
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${envId}-${environment}-sg